name: Deployment Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  Deployment-Pipeline:
    runs-on: ubuntu-20.04
    if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message), '#SKIP') }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16.9.0'
      - name: log directory info
        run: ls -l
      - name: frontend - npm install
        run: cd bloglist-frontend && ls -l && npm install
      - name: check current directory
        run: ls -l
      - name: frontend - eslint
        run: cd bloglist-frontend && npm run lint
      - name: frontend - tests
        run: cd bloglist-frontend && npm run test
      - name: frontend - build
        run: cd bloglist-frontend && npm run build
      - name: backend - npm install
        run: cd bloglist-backend && ls -l && npm install
      - name: backend - eslint
        run: cd bloglist-backend && npm run lint
      - name: backend - api tests - write logs to file
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
          SECRET: ${{ secrets.SECRET }}
        run: cd bloglist-backend && npm run test &> out-test-logs.txt
      - name: store test logs to CONTENT_ENV
        run: |
          echo 'CONTENT_ENV<<EOF' >> $GITHUB_ENV
          cat out-test-logs.txt >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
        working-directory: ./bloglist-backend
      - name: show the logs
        run: echo "$CONTENT_ENV"
      - name: exit if tests failed
        if: ${{contains(join(env.CONTENT_ENV), 'FAIL')}}
        run: exit 1
      - name: e2e tests
        uses: cypress-io/github-action@v5
        with:
          command: cd ../bloglist-frontend && npm run test:e2e
          start: npm run start:test
          wait-on: http://localhost:3000
          browser: chrome
          working-directory: ./bloglist-backend